#%RAML 1.0
title: WebShop User Service
version: v1
baseUri:

uses:
  library: types.raml

/users:
  get:
    description: Retrieve the list of users
    queryParameters:
      username:
        displayName: Username
        type: string
        description: Get user by username
        example: admin
        required: false
    responses:
      200:
        body:
          application/json:
            type: library.User[]
            example: |
            [
              {
                "id": 1,
                "username": "admin",
                "firstname": "admin",
                "lastname": "admin",
                "password": "admin",
                "role": {
                  "id": 1,
                  "type": "admin",
                  "level": 1
                }
              }
            ]
  post:
    description: Create a new user
    body:
      application/json:
        type: library.NewUser
        example: |
        {
          "username": "nuser",
          "firstname": "new",
          "lastname": "user",
          "password": "123",
          "roletype": "user"
        }
    responses:
      201:
        body:
          application/json:
            type: library.User
            example: |
            {
              "id": 2,
              "username": "nuser",
              "firstname": "new",
              "lastname": "user",
              "password": "123",
              "role": {
                "id": 2,
                "type": "user",
                "level": 1
              }
            }
      400:
  /{userId}:
    get:
      description: Get a user by its ID
      responses:
        200:
          body: application/json:
            type: library.User
            example: |
            {
              "id": 1,
              "username": "admin",
              "firstname": "admin",
              "lastname": "admin",
              "password": "admin",
              "role": {
                "id": 1,
                "type": "admin",
                "level": 1
              }
            }
        404:
    delete:
      description: Delete a user by ID
        responses:
          204:
          404:

/roles:
  get:
    description: Retrieve the list of roles
      queryParameters:
        level:
          displayName: Level
          type: integer
          description: Get role by level
          example: 1
          required: false
    responses:
      200:
        body:
          application/json:
            type: library.Role[]
            example: |
            [
              {
                "id": 1,
                "type": "admin",
                "level": 1
              }
            ]