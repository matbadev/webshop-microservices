#%RAML 1.0
title: WebShop Products Service
version: v1
baseUri:

uses:
  library: types.raml

/products:
  get:
    description: Search for products (or get them all of no parameters given)
    queryParameters:
      text:
        displayName: Query text
        type: string
        description: The text to search the product names and descriptions for
        example: MacBook
        required: false
      minPrice:
        displayName: Minimum product price
        type: number
        example: 1099.0
        required: false
      maxPrice:
        displayName: Maximum product price
        type: number
        example: 1099.0
        required: false
    responses:
      200:
        body:
          application/json:
            type: library.Product[]
            example: |
            [
              {
                "id": 1,
                "name": "MacBook Air",
                "price": 1099.0,
                "details": "A light laptop from Apple.",
                "category": {
                  "id": 1,
                  "name": "electronics"
                }
              }
            ]

  /{productId}:
    get:
      description: Get product by ID
      responses:
        200:
          body:
            application/json:
              type: library.Product
              example: |
              {
                "id": 1,
                "name": "MacBook Air",
                "price": 1099.0,
                "details": "A light laptop from Apple.",
                "category": {
                  "id": 1,
                  "name": "electronics"
                }
              }
        404:

    post:
      description: Create a new product
      body:
        application/json:
          type: library.NewProduct
          example: |
          {
            "name": "MacBook Air",
            "price": 1099.0,
            "details": "A light laptop from Apple.",
            "category": "electronics"
          }
      responses:
        201:
          body:
            application/json:
              type: library.Product
              example: |
              {
                "id": 1,
                "name": "MacBook Air",
                "price": 1099.0,
                "details": "A light laptop from Apple.",
                "category": {
                  "id": 1,
                  "name": "electronics"
                }
              }
        400:

    delete:
      description: Delete product by ID
      responses:
        204:
        404:

/categories:
  get:
    description: Get all categories
    responses:
      200:
        body:
          application/json:
            type: library.Category[]
            example: |
            [
              {
                "id": 1,
                "name": "electronics"
              },
              {
                "id": 2,
                "name": "other"
              }
            ]

  post:
    description: Create a new category
    body:
      application/json:
        type: library.NewCategory
        example: |
        {
          "name": "electronics"
        }
    responses:
      201:
        body:
          application/json:
            type: library.Category
            example: |
            {
              "id": 1,
              "name": "electronics"
            }
      400:

  /{categoryId}:
    get:
      description: Get category by ID
      responses:
        200:
          body:
            application/json:
              type: library.Category
              example: |
              {
                "id": 1,
                "name": "electronics"
              }
        404:

    delete:
      description: Delete a category by ID
      responses:
        204:
        404:
